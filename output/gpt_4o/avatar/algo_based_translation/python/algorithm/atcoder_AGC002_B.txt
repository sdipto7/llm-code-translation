```plaintext
Function Signatures:
- input() -> str
- INT() -> int
- MAP() -> Tuple[int, ...]
- LIST() -> List[int]
- ZIP(n: int) -> Iterator[Tuple[int, ...]]

Variable Declarations and Data Types:
- N, M: int
- balls: List[List[int]]
- x, y: int
- w_x, r_x, w_y, r_y: int
- ans: int

Algorithm:
1. Import necessary modules: sys, collections, math, itertools, operator, copy, string, bisect, fractions, heapq, functools.
2. Define input functions for reading and converting input data.
3. Set recursion limit to 10^9.
4. Define constants: INF as infinity and mod as 10^9 + 7.
5. Read integers N and M using the MAP function.
6. Initialize a list 'balls' of size N with each element as a list [1, 0]. 
7. Set balls[0] to [0, 1].
8. Loop M times to read x and y using MAP function:
   a. Retrieve w_x, r_x from balls[x-1].
   b. Retrieve w_y, r_y from balls[y-1].
   c. If w_x >= 1 and r_x >= 1, then decrement balls[x-1][0] by 1 and increment balls[y-1][1] by 1.
   d. Else if w_x == 0, then decrement balls[x-1][1] by 1 and increment balls[y-1][1] by 1.
   e. Else decrement balls[x-1][0] by 1 and increment balls[y-1][0] by 1.
9. Initialize ans to 0.
10. Loop over each element in range N:
    a. If balls[i][1] is true, increment ans by 1.
11. Print the value of ans.
```
