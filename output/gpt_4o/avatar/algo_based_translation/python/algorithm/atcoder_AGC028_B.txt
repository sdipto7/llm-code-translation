```
import sys
import numpy as np

def algorithm() -> None:
    input = sys.stdin.readline
    MOD: int = 10 ** 9 + 7
    N: int = int(input().strip())
    M: int = 10 ** 6
    A: np.ndarray = np.array(input().strip().split(), dtype=np.int64)
    
    Nsq: int = 10 ** 3
    fact: np.ndarray = np.arange(M, dtype=np.int64).reshape(Nsq, Nsq)
    fact[0, 0] = 1
    
    for n in range(1, Nsq):
        fact[:, n] *= fact[:, n - 1]
        fact[:, n] %= MOD
    
    for n in range(1, Nsq):
        fact[n] *= fact[n - 1, -1]
        fact[n] %= MOD

    fact: np.ndarray = fact.ravel()
    j: np.ndarray = np.arange(N)
    inv: np.ndarray = np.array([pow(i + 1, MOD - 2, MOD) for i in range(N)])
    inv = np.cumsum(inv) % MOD
    
    temp: np.ndarray = inv[j] + inv[N - 1 - j] - 1
    ans: int = (A * temp % MOD).sum()
    ans %= MOD
    
    ans *= fact[N]
    ans %= MOD
    
    print(ans)
```
