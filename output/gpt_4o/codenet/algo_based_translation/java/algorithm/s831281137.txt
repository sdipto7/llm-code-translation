```
import java.io.PrintStream;
import java.util.Scanner;

Scanner sc = new Scanner(System.in);
PrintStream so = System.out;

void main(String[] args)
    int N, W;
    int[] v, w;
    int[][] sumV;
    N = nint()
    W = nint()
    v = new int[N+1]
    w = new int[N+1]
    for i from 1 to N
        v[i] = nint()
        w[i] = nint()
    sumV = new int[N+1][W+1]
    for i from 1 to N
        for i_sum from 0 to w[i]-1
            sumV[i][i_sum] = sumV[i-1][i_sum]
        for i_sum from w[i] to W
            sumV[i][i_sum] = max(sumV[i-1][i_sum], sumV[i-1][i_sum-w[i]] + v[i])
    so.println(sumV[N][W])

long nlong()
    return sc.nextLong()

int nint()
    return sc.nextInt()

String nstr()
    return sc.next()

char[] nsToChars()
    return sc.next().toCharArray()

long[] nlongs(int n)
    return nlongs(n, 0, 0)

int[] nints(int n)
    return nints(n, 0, 0)

int[] nints(int n, int padL, int padR)
    int[] a = new int[padL + n + padR]
    for i from 0 to n-1
        a[padL + i] = nint()
    return a

long[] nlongs(int n, int padL, int padR)
    long[] a = new long[padL + n + padR]
    for i from 0 to n-1
        a[padL + i] = nlong()
    return a

String[] nstrs(int n)
    String[] a = new String[n]
    for i from 0 to n-1
        a[i] = nstr()
    return a

char[][] nsToChars2D(int h, int w)
    return nsToChars2D(h, w, 0)

char[][] nsToChars2D(int h, int w, int pad)
    char[][] a2 = new char[h + pad * 2][w + pad * 2]
    for i from 0 to h-1
        copy(nsToChars(), 0, a2[pad + i], pad, w)
    return a2
```
