```
Function bubbleSort(cards: List[str]) -> None:
    Declare n as int, initialize to length of cards
    For i in range from 0 to n-1:
        For j in range from n-1 to i, decrementing:
            If integer value of cards[j][1] is less than integer value of cards[j-1][1]:
                Swap cards[j] and cards[j-1]
    Print space-separated string representation of elements in cards

Function selectionSort(cards: List[str]) -> None:
    Declare n as int, initialize to length of cards
    For i in range from 0 to n-1:
        Declare mini as int, initialize to i
        For j in range from i to n-1:
            If integer value of cards[j][1] is less than integer value of cards[mini][1]:
                Set mini to j
        If mini is not equal to i:
            Swap cards[i] and cards[mini]
    Print space-separated string representation of elements in cards

Input n as int
Input cards as List[str], parse from space-separated string input
Declare cards2 as List[str], initialize as a copy of cards
Call bubbleSort with cards
Print "Stable"
Call selectionSort with cards2
If space-joined string of cards2 equals space-joined string of cards:
    Print "Stable"
Else:
    Print "Not stable"
```
