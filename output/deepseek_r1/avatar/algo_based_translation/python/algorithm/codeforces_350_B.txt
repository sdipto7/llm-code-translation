**Algorithm Specification**

**Function/Method Signatures:**
- Not applicable (script-based approach)

**Variables:**
- `n: int` (input integer)
- `t: list[int]` (size n+1, 0-indexed with t[0] = 0)
- `a: list[int]` (size n+1, 0-indexed with a[0] = 0)
- `ans: list[int]` (initially empty, stores longest path)
- `cnt: list[int]` (size n+1, counts occurrences of values in `a`)
- `crt: list[int]` (temporary path storage)
- `x: int` (temporary variable for path traversal)

**Logic Flow:**
1. Read integer `n` from standard input.
2. Read the next line, split into integers, prepend 0 to create list `t` (size n+1).
3. Read the next line, split into integers, prepend 0 to create list `a` (size n+1).
4. Initialize `ans` as an empty list.
5. Initialize `cnt` as a list of zeros with size n+1.
6. For each element `i` in list `a` (all elements including index 0):
   - Increment `cnt[i]` by 1.
7. For each `i` from 1 to n (inclusive):
   - If `t[i]` equals 1:
     1. Initialize `crt` as a list containing `[i]`.
     2. Set `x` to `a[i]`.
     3. While `cnt[x]` equals 1:
         - Append `x` to `crt`.
         - Set `x` to `a[x]`.
     4. If the length of `crt` exceeds the length of `ans`:
         - Set `ans` to a copy of `crt`.
8. Reverse the order of elements in `ans`.
9. Print the length of `ans`.
10. Print elements of `ans` as space-separated integers.

**Control Flow Structures:**
- Loop over all elements of `a` (fixed iteration)
- Loop over `i` from 1 to n (fixed iteration)
  - Conditional (`t[i] == 1`) to start path discovery
  - While loop with condition `cnt[x] == 1` for path traversal
- Conditional update of `ans` based on path length comparison

**Input/Output Operations:**
- Read `n` via `input()`
- Read two lines for `t` and `a` via `input().split()`
- Output `len(ans)` followed by space-separated elements of `ans`

**Edge Case Handling:**
- Handles empty `ans` by outputting 0 and an empty line
- Implicitly skips invalid paths via `cnt[x] == 1` condition

**Dependencies:**
- Requires standard input/output functions
- No external libraries or modules used
