- Functions:
  - `public static void solve()`: Reads input, processes logic, writes output.
  - `public static long getValueAtIndex(long index)`: Returns `1 + ((index - 1) * index) / 2`.

- Variables:
  - `long position`: Input value to process.
  - `long nrstSeqStartIndx`: Tracks current search index, initialized to 1.
  - `long startIndex`: Stores sequence value at final index.

- Logic Flow:
  1. Read `position` via custom input method.
  2. Initialize `nrstSeqStartIndx = 1`.
  3. While loop: `getValueAtIndex(nrstSeqStartIndx * 2) < position`
     - Update: `nrstSeqStartIndx *= 2`
  4. While loop: `getValueAtIndex(nrstSeqStartIndx + 1) <= position`
     - Update: `nrstSeqStartIndx++`
  5. Calculate `startIndex = getValueAtIndex(nrstSeqStartIndx)`
  6. Compute result as `(position - startIndex) + 1`
  7. Print result via custom output method.

- Control Structures:
  - First while loop condition: Checks if doubling index keeps sequence value below input
  - Second while loop condition: Checks if next index's sequence value remains within input

- Input/Output:
  - Input: Single `long` via `sc.nextLong()`
  - Output: Result via `out.println()`

- Dependencies:
  - `java.io` for BufferedReader, InputStream, PrintWriter
  - `java.util` for Scanner, StringTokenizer
