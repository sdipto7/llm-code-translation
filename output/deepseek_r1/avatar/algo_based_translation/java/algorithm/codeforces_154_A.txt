**Function Signatures:**
- `public static void main(String[] args) throws Exception`

**Variables:**
- `BufferedReader infile`: initialized with `System.in`
- `char[] arr`: input string converted to character array
- `int N`: length of `arr`
- `HashSet<String> set`: unused
- `int K`: parsed from input
- `int res`: initialized to 0, accumulates result
- `String input`: read for each K iteration
- `int a`, `int b`: counters for occurrences of input pair characters

**Libraries/Dependencies:**
- `java.util.*`, `java.io.*`, `java.math.*`

**Logic Flow:**
1. Read input string into `arr` and set `N = arr.length`.
2. Read integer `K` from input.
3. Initialize `res = 0`.
4. Loop `K` times:
    - Read `input` string.
    - Reset `a = 0`, `b = 0`.
    - Loop through each index `i` in `arr`:
        - If `arr[i]` matches `input.charAt(0)`, increment `a`.
        - Else if `arr[i]` matches `input.charAt(1)`, increment `b`.
        - Else (non-matching character):
            - Add `Math.min(a, b)` to `res`.
            - Reset `a = 0`, `b = 0`.
    - After inner loop, add `Math.min(a, b)` to `res`.
5. Print `res`.

**Control Structures:**
- `for (int k = 0; k < K; k++)` to process each pair.
- `for (int i = 0; i < N; i++)` to iterate over `arr`.
- `if (arr[i] == input.charAt(0))`, `else if (arr[i] == input.charAt(1))`, `else` to count or reset.

**Input/Output:**
- Input via `BufferedReader` reading lines from `System.in`.
- Output via `System.out.println(res)`.
