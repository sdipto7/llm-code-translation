**Function Signature:**
- `public static void main(String[] args)`

**Variables:**
- `n: int` (input count)
- `N: int` (unused constant, value `100005`)
- `cnt: long[21]` (frequency counter array)
- `res: long` (result accumulator)
- `scan: Scanner` (input handler)

**Libraries/Dependencies:**
- `java.util.Scanner`

**Logic Flow:**
1. Initialize `scan` to read from standard input.
2. Read integer `n` using `scan.nextInt()`.
3. Declare `cnt` as a long array of size 21, initialized to zeros.
4. Loop `i` from `0` to `n-1`:
   - Read integer `x` via `scan.nextInt()`.
   - Increment `cnt[x + 10]` by 1.
5. Initialize `res` to 0.
6. Loop `i` from `0` to `9`:
   - Add `cnt[i] * cnt[20 - i]` to `res`.
7. Compute `(cnt[10] * (cnt[10] - 1)) / 2` and add to `res`.
8. Print `res` via `System.out.println(res)`.

**Control Structures:**
- Two `for` loops:
  - First: `for (int i = 0; i < n; i++)`
  - Second: `for (int i = 0; i < 10; i++)`

**Input/Output:**
- Input: Single integer `n` followed by `n` integers via standard input.
- Output: Single integer `res` printed to standard output.

**Operations:**
- Frequency counting of integers after offset adjustment (`+10`).
- Pairwise multiplication of symmetrical frequency counts (excluding midpoint).
- Combination calculation for midpoint (zero pairs).
