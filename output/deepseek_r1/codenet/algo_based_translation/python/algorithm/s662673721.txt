- **Function Signature**
  - `main() -> void` (implicit procedure)
  
- **Variables**
  - `n: int` (input value)
  - `ans: int` (initialized to `10**18`)
  - `i: int` (loop variable iterating over potential divisors)
  - `j: int` (computed as `n // i` when `i` divides `n`)

- **Dependencies**
  - `import sys` (for fast input reading)

- **Logic Flow**
  1. Read integer `n` from standard input via `sys.stdin.readline`.
  2. Initialize `ans` to `10**18`.
  3. Iterate `i` from `1` to `int(n ** 0.5) + 1` (inclusive):
     - If `n % i != 0`, skip the current iteration.
     - Compute `j = n // i`.
     - Update `ans` with the minimum of its current value and `(i + j - 2)`.
  4. Print the final value of `ans`.

- **Control Structures**
  - `for i in range(1, int(n ** 0.5) + 2):`
  - `if n % i != 0: continue`
  - `ans = min(ans, i + j - 2)`

- **Input/Output Operations**
  - Input: Read `n` via `n = int(sys.stdin.readline())`
  - Output: Print `ans` via `print(ans)`
