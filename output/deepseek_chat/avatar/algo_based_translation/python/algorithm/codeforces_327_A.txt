**Function: find**
- Parameters: s (string), ch (character)
- Returns: list of integers (indices where character equals ch)
- Logic: Iterate through each character in s, collect indices where character matches ch

**Main Program:**
- Input: integer n, string s (with spaces removed)
- Variables:
  - n: integer
  - s: string
  - indices: list of integers (positions of '0' in s)
  - maximum: integer (initialized to 0)
  - combs: iterator of tuples (all combinations of two indices from indices list)
  - x: tuple (each combination pair from combs)

**Execution Flow:**
1. Read integer n from input
2. Read string s from input and remove all spaces
3. If '0' not in s:
   - Print (n - 1)
4. Else:
   - Find all indices of '0' in s using find function
   - If count of indices == 1:
     - Print n
   - Else:
     - Initialize maximum = 0
     - Generate all combinations of 2 indices from indices list
     - For each combination pair x in combs:
       - Calculate: 2 + 2*(absolute_difference(index_of_x0_in_indices, index_of_x1_in_indices) - 1) - (absolute_difference(x[0], x[1]) - 1)
       - Update maximum = max(maximum, calculated_value)
     - Print (count of '1' in s) + maximum

**Required Libraries:**
- itertools (for combinations function)
