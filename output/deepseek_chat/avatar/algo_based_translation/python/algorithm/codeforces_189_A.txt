**Function Signature:**
- Name: cutRibbon
- Parameters: None
- Return Type: void

**Variables:**
- arr: list of integers
- length: integer
- ans: integer (initialized to 0)
- k: integer (initialized to 0)
- i: integer (loop counter)
- j: integer (loop counter)
- check: integer

**Algorithm:**
1. Read input line and split into list of strings
2. Convert each element in list to integer
3. Store first element as length
4. Extract elements 1-3 from list and sort in ascending order
5. Check if length is divisible by smallest element (arr[0]):
   - If true: print length/arr[0] and return
6. If smallest two elements are equal (arr[0] == arr[1]):
   - For i from 0 to floor(length/arr[2]):
      - Calculate check = length - i*arr[2]
      - If check >= 0 and divisible by arr[0]:
         - Set k = check/arr[0]
         - Update ans = max(ans, k + i)
7. Else:
   - For i from 0 to floor(length/arr[2]):
      - For j from 0 to floor(length/arr[1]):
         - Calculate check = length - i*arr[2] - j*arr[1]
         - If check >= 0 and divisible by arr[0]:
            - Set k = check/arr[0]
            - Update ans = max(ans, k + i + j)
8. Print ans
9. Return

**Input/Output:**
- Input: Single line of space-separated integers
- Output: Integer result printed to console

**Dependencies:**
- Standard input/output functions
- No external libraries required
