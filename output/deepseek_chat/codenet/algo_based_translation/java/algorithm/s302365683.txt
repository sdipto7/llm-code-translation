**Function Signature:**
- `main(String[] args) throws IOException`

**Variables:**
- `BufferedReader br`
- `PrintWriter pw`
- `StringTokenizer s`
- `int n`
- `HashMap<Integer, Integer> hm`
- `int val`
- `int ans`
- `int num`

**Libraries/Dependencies:**
- `java.util.*`
- `java.io.*`

**Algorithm:**
1. Initialize `br` with `BufferedReader` wrapping `InputStreamReader(System.in)`
2. Initialize `pw` with `PrintWriter` wrapping `BufferedWriter` wrapping `OutputStreamWriter(System.out)`
3. Read first line using `br.readLine()` and tokenize with `StringTokenizer`, store in `s`
4. Parse first token from `s` to integer `n`
5. Initialize empty `HashMap<Integer, Integer> hm`
6. Read next line using `br.readLine()` and tokenize with `StringTokenizer`, store in `s`
7. For `i` from 0 to `n-1`:
   - Parse next token from `s` to integer `val`
   - Update `hm`: `hm.put(val, hm.getOrDefault(val, 0) + 1)`
8. Initialize `ans` to 0
9. For each key `val` in `hm.keySet()`:
   - Get value from `hm` for key `val`, store in `num`
   - If `num > val`: add `num - val` to `ans`
   - Else if `num < val`: add `num` to `ans`
10. Print `ans` using `pw.println(ans)`
11. Close `pw`
