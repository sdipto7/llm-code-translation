**Algorithm:**

- Function Signature: `main() -> None`

- Variable Declarations and Data Types:
  - `given: str`
  - `l1: List[int]`
  - `x1: int`
  - `y1: int`
  - `x2: int`
  - `y2: int`
  - `denominator: int`
  - `numerator: int`
  - `quotient: float`
  - `d: int`
  - `x3: int`
  - `y3: int`
  - `x4: int`
  - `y4: int`

- Complete Logic Flow in Execution Order:
  1. Read input string `given` from user.
  2. Split `given` into a list of strings `l1`.
  3. Convert each element in `l1` to integers and update `l1`.
  4. Assign `l1[0]` to `x1`.
  5. Assign `l1[1]` to `y1`.
  6. Assign `l1[2]` to `x2`.
  7. Assign `l1[3]` to `y2`.
  8. Calculate `denominator` as `x2 - x1`.
  9. Calculate `numerator` as `y2 - y1`.
  10. If `denominator` is not equal to 0, calculate `quotient` as `numerator / denominator`.
  11. If `numerator` is equal to 0:
      - Calculate `d` as integer value of square root of `(x2 - x1)^2 + (y2 - y1)^2`.
      - Set `x4` to `x1`.
      - Set `x3` to `x2`.
      - Set `y3` to `y2 + d`.
      - Set `y4` to `y1 + d`.
      - Print `f"{x3} {y3} {x4} {y4}"`.
  12. Else if `denominator` is equal to 0:
      - Set `y4` to `y2`.
      - Set `y3` to `y1`.
      - Calculate `d` as integer value of square root of `(x2 - x1)^2 + (y2 - y1)^2`.
      - Set `x4` to `x1 + d`.
      - Set `x3` to `x2 + d`.
      - Print `f"{x3} {y3} {x4} {y4}"`.
  13. Else if `quotient` is equal to 1:
      - Set `x4` to `x2`.
      - Set `x3` to `x1`.
      - Set `y4` to `y1`.
      - Set `y3` to `y2`.
      - Print `f"{x3} {y3} {x4} {y4}"`.
  14. Else if `quotient` is equal to -1:
      - Set `x4` to `x1`.
      - Set `x3` to `x2`.
      - Set `y4` to `y2`.
      - Set `y3` to `y1`.
      - Print `f"{x3} {y3} {x4} {y4}"`.
  15. Else:
      - Print `-1`.

- Control Structures:
  - Conditional Statements:
    - If `denominator != 0`: Calculate `quotient`.
    - If `numerator == 0`: Perform calculations for vertical line and print result.
    - Else if `denominator == 0`: Perform calculations for horizontal line and print result.
    - Else if `quotient == 1`: Perform calculations for slope of 1 and print result.
    - Else if `quotient == -1`: Perform calculations for slope of -1 and print result.
    - Else: Print `-1`.

- Input/Output Operations and Data Processing Logic:
  - Input: Single string `given` containing four space-separated integers.
  - Output: Four space-separated integers representing calculated coordinates or `-1` if no specific condition matches.

- Required Libraries, Modules, or Dependencies:
  - `math` module for using `sqrt` function.
