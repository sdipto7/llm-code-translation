1. Define a class `Main` implementing the `Runnable` interface.
2. Declare a static `Scanner` object `sc` initialized with `System.in`.
3. Define a `main` method with a `String[]` parameter.
   1. Create a new `Thread` with a `null` first argument, a new instance of `Main` as the second argument, an empty string as the third argument, and a stack size of 128MB.
   2. Start the thread.
4. Define a `run` method with no parameters.
   1. Read an integer `n` from the input using `sc.nextInt()`.
   2. Declare an integer array `a` of size `n`.
   3. Iterate from `0` to `n-1` using a loop counter `i`.
      1. Read an integer from the input using `sc.nextInt()` and store it in `a[i]`.
   4. Initialize `long` variables `cost1` and `cost2` to `0`.
   5. Initialize `int` variables `current1` and `current2` to `0`.
   6. Declare two `long` arrays `dp1` and `dp2` of size `n`.
   7. Iterate from `0` to `n-1` using loop counters `i` and `j = n-1-i`.
      1. Increment `cost1` by the absolute difference between `a[i]` and `current1`.
      2. Update `current1` to `a[i]`.
      3. Store `cost1` in `dp1[i]`.
      4. Increment `cost2` by the absolute difference between `a[j]` and `current2`.
      5. Update `current2` to `a[j]`.
      6. Store `cost2` in `dp2[j]`.
   8. Iterate from `0` to `n-1` using a loop counter `i`.
      1. If `i` equals `0`, print `dp2[i+1] + Math.abs(a[1])`.
      2. Else if `i` equals `n-1`, print `dp1[i-1] + Math.abs(a[i-1])`.
      3. Else, print `dp1[i-1] + dp2[i+1] + Math.abs(a[i-1] - a[i+1])`. 

Required libraries: `java.util.Scanner`, `java.lang.Runnable`, `java.lang.Thread`
