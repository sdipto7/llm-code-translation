1. Import necessary modules.
2. Define helper functions:
   - value(): returns a tuple of integers from input.
   - values(): returns a tuple of integers from sys.stdin.readline.
   - inlst(): returns a list of integers from input.
   - inlsts(): returns a list of integers from sys.stdin.readline.
   - inp(): returns an integer from input.
   - inps(): returns an integer from sys.stdin.readline.
   - instr(): returns input as a string.
   - stlst(): returns a list of strings from input.
3. Define help(a, b, l):
   1. Initialize an empty list tot.
   2. For i from 0 to b-1:
      1. Append a slice of l (from index i*a to i*a + a) to tot.
   3. For each tuple i generated by zipping the elements of tot:
      1. If the sum of elements in i equals b:
         1. Return True.
   4. Return False.
4. Define solve():
   1. Initialize an empty list tot.
   2. Read a string x using instr().
   3. Initialize an empty list s.
   4. For each character i in x:
      1. If i equals 'O':
         1. Append 0 to s.
      2. Else:
         1. Append 1 to s.
   5. For i from 1 to 12:
      1. If 12 is divisible by i:
         1. If help(i, 12/i, s) returns True:
            1. Append a tuple (12/i, i) to tot.
   6. Print the length of tot.
   7. For each tuple (a, b) in sorted tot:
      1. Print f'{a}x{b}'.
   8. Print a newline.
5. If the script is run as the main module:
   1. For i from 0 to inp()-1:
      1. Call solve().
