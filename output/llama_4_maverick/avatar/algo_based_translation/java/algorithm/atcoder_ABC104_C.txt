1. Initialize a constant INF to a large value (100000).
2. Read input values: D, G, p[i], and c[i] for i = 0 to D-1.
3. Initialize a variable min to INF.
4. Iterate over all possible values of bit from 0 to 2^D - 1.
5. For each bit, calculate score and solve_num by iterating over i from 0 to D-1.
6. If the i-th bit is set in bit, add 100 * (i + 1) * p[i] + c[i] to score and add p[i] to solve_num.
7. If score is less than G, iterate over i from D-1 to 0.
8. If the i-th bit is not set in bit, iterate over j from 0 to p[i] - 2.
9. Add 100 * (i + 1) to score and increment solve_num by 1.
10. If score becomes greater than or equal to G, stop the inner iteration.
11. If score is greater than or equal to G, update min with the minimum of min and solve_num.
12. Output the final value of min.
