1. Read input values n, m, and x.
2. Initialize a 2D array a with dimensions n x (m+1).
3. Populate the 2D array a with input values.
4. Initialize a variable min with the maximum possible integer value.
5. Iterate over all numbers from 0 to 2^n - 1.
6. For each number i, create a status array of size n.
7. For each j from 0 to n-1, set status[j] to 1 if the jth bit of i is 1.
8. Create a result array res of size m+1 and initialize it with zeros.
9. For each j from 0 to n-1, if status[j] is 1, add the jth row of a to res.
10. Check if all elements in res (except the first) are greater than or equal to x.
11. If they are, update min with the minimum of min and res[0].
12. After iterating over all numbers, check if min is still the maximum possible integer value.
13. If it is, output -1; otherwise, output min.
