1. Read four integers N, L, R, QL, QR from the input.
2. Initialize an array W of size N and an array sum of size N+1.
3. For n ranging from 0 to N-1, read the nth element of W and calculate the (n+1)th element of sum as the sum of the nth element of sum and the nth element of W.
4. Initialize a variable min to store the maximum possible long integer value.
5. Iterate over all possible values of firstR from 0 to N.
6. For each firstR, calculate lCount as firstR and rCount as N - lCount.
7. Calculate a candidate value cand as the sum of (sum at index lCount multiplied by L) and ((sum at index N minus sum at index lCount) multiplied by R).
8. Calculate llCount as the maximum of 0 and (lCount minus rCount minus 1), and rrCount as the maximum of 0 and (rCount minus lCount minus 1).
9. Update cand by adding (llCount multiplied by QL) and (rrCount multiplied by QR) to it.
10. Update min with the minimum of cand and the current min.
11. Output the final value of min.
