import java.io.OutputStream ; import java.io.IOException ; import java.io.InputStream ; import java.io.PrintWriter ; import java.util.StringTokenizer ; import java.io.IOException ; import java.io.BufferedReader ; import java.io.InputStreamReader ; import java.io.InputStream ; public class atcoder_ARC062_B { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; TaskD solver = new TaskD ( ) ; solver.solve ( 1 , in , out ) ; out.close ( ) ; } static class TaskD { public void solve ( int testNumber , InputReader in , PrintWriter out ) { String S = in.next ( ) ; int score = 0 ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { char my = i % 2 == 0 ? 'g' : 'p' ; char his = S.charAt ( i ) ; if ( my != his ) { score += my == 'p' ? 1 : - 1 ; } } out.println ( score ) ; } } static class InputReader { public BufferedReader reader ; public StringTokenizer tokenizer ; public InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ) , 32768 ) ; tokenizer = null ; } public String next ( ) { while ( tokenizer == null || ! tokenizer.hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } } }
