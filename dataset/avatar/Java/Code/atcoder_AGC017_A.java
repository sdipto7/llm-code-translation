import java.util.* ; import java.math.* ; public class atcoder_AGC017_A { static BigInteger C ( int n , int m ) { BigInteger res = new BigInteger ( "1" ) ; for ( int i = m - n + 1 ; i <= m ; i ++ ) res = res.multiply ( BigInteger.valueOf ( i ) ) ; for ( int i = 1 ; i <= n ; i ++ ) res = res.divide ( BigInteger.valueOf ( i ) ) ; return res ; } public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System.in ) ; int n , p ; int k0 = 0 ; int k1 = 0 ; n = sc.nextInt ( ) ; p = sc.nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int x ; x = sc.nextInt ( ) ; if ( x % 2 == 1 ) k1 ++ ; else k0 ++ ; } BigInteger ans = new BigInteger ( "1" ) ; for ( int i = 0 ; i < k0 ; i ++ ) ans = ans.multiply ( BigInteger.valueOf ( 2 ) ) ; if ( p == 0 ) { BigInteger add = new BigInteger ( "0" ) ; for ( int i = 0 ; i <= k1 ; i += 2 ) add = add.add ( C ( i , k1 ) ) ; ans = ans.multiply ( add ) ; System.out.println ( ans ) ; } else { BigInteger add = new BigInteger ( "0" ) ; for ( int i = 1 ; i <= k1 ; i += 2 ) add = add.add ( C ( i , k1 ) ) ; ans = ans.multiply ( add ) ; System.out.println ( ans ) ; } } }
