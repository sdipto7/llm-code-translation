import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStream ; import java.io.InputStreamReader ; import java.io.OutputStream ; import java.io.PrintWriter ; import java.util.ArrayList ; import java.util.Arrays ; import java.util.Collections ; import java.util.HashSet ; import java.util.List ; import java.util.Set ; import java.util.StringTokenizer ; public class atcoder_ABC070_B { public static void main ( String [ ] args ) { InputStream inputStream = System.in ; OutputStream outputStream = System.out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; int a = in.nextInt ( ) ; int b = in.nextInt ( ) ; int c = in.nextInt ( ) ; int d = in.nextInt ( ) ; if ( c > b ) { System.out.println ( 0 ) ; } else if ( a > d ) { System.out.println ( 0 ) ; } else if ( a < c ) { System.out.println ( Math.min ( b , d ) - c ) ; } else { List < Integer > l = new ArrayList < > ( ) ; l.add ( a ) ; l.add ( b ) ; l.add ( c ) ; l.add ( d ) ; Collections.sort ( l ) ; System.out.println ( l.get ( 2 ) - l.get ( 1 ) ) ; } } static class InputReader { public BufferedReader reader ; public StringTokenizer tokenizer ; public InputReader ( InputStream stream ) { reader = new BufferedReader ( new InputStreamReader ( stream ) , 32768 ) ; tokenizer = null ; } public String next ( ) { while ( tokenizer == null || ! tokenizer.hasMoreTokens ( ) ) { try { tokenizer = new StringTokenizer ( reader.readLine ( ) ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } return tokenizer.nextToken ( ) ; } public int nextInt ( ) { return Integer.parseInt ( next ( ) ) ; } public long nextLong ( ) { return Long.parseLong ( next ( ) ) ; } } }
