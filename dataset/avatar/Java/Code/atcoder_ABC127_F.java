import java.io.* ; import java.util.* ; public class atcoder_ABC127_F { static OutputStream outputStream = System.out ; static PrintWriter out = new PrintWriter ( outputStream ) ; public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; int t = Integer.parseInt ( br.readLine ( ) ) ; String [ ] s ; PriorityQueue < Integer > pqmax = new PriorityQueue < Integer > ( ) ; PriorityQueue < Integer > pqmin = new PriorityQueue < Integer > ( new Comparator < Integer > ( ) { public int compare ( Integer x , Integer y ) { return y - x ; } } ) ; long sumMin = 0 , sumMax = 0 , sumb = 0 ; int min = 0 ; while ( t -- > 0 ) { s = br.readLine ( ).split ( " " ) ; if ( s [ 0 ].charAt ( 0 ) == '2' ) { long ans = min ; ans *= pqmin.size ( ) ; ans -= sumMin ; long ans1 = min ; ans1 *= pqmax.size ( ) ; ans1 = sumMax - ans1 ; out.println ( min + " " + ( ans + ans1 + sumb ) ) ; } else { int in = Integer.parseInt ( s [ 1 ] ) ; sumb += Long.parseLong ( s [ 2 ] ) ; if ( in > min ) { pqmax.add ( in ) ; sumMax += in ; } else { pqmin.add ( in ) ; sumMin += in ; } if ( pqmin.size ( ) > pqmax.size ( ) ) { sumMax += pqmin.peek ( ) ; sumMin -= pqmin.peek ( ) ; pqmax.add ( pqmin.poll ( ) ) ; } if ( pqmin.size ( ) < pqmax.size ( ) ) { sumMax -= pqmax.peek ( ) ; sumMin += pqmax.peek ( ) ; pqmin.add ( pqmax.poll ( ) ) ; } min = pqmin.peek ( ) ; } } out.close ( ) ; } }
