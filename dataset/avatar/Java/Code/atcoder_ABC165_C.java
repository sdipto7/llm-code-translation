import java.util.ArrayList ; import java.util.Scanner ; public class atcoder_ABC165_C { static int [ ] a = null ; static int [ ] b = null ; static int [ ] c = null ; static int [ ] d = null ; static int n = 0 ; static int m = 0 ; static int q = 0 ; static long ans = - 100L ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; n = sc.nextInt ( ) ; m = sc.nextInt ( ) ; q = sc.nextInt ( ) ; a = new int [ q ] ; b = new int [ q ] ; c = new int [ q ] ; d = new int [ q ] ; for ( int i = 0 ; i < q ; ++ i ) { a [ i ] = sc.nextInt ( ) - 1 ; b [ i ] = sc.nextInt ( ) - 1 ; c [ i ] = sc.nextInt ( ) ; d [ i ] = sc.nextInt ( ) ; } dfs ( new ArrayList < Integer > ( ) ) ; System.out.println ( ans ) ; } public static void dfs ( ArrayList < Integer > list ) { if ( list.size ( ) == n ) { long score = 0L ; for ( int i = 0 ; i < q ; ++ i ) { score += ( list.get ( b [ i ] ) - list.get ( a [ i ] ) == c [ i ] ) ? d [ i ] : 0L ; } ans = Math.max ( ans , score ) ; return ; } if ( ! list.isEmpty ( ) ) { for ( int num = list.get ( list.size ( ) - 1 ) ; num <= m ; ++ num ) { list.add ( num ) ; dfs ( list ) ; list.remove ( list.size ( ) - 1 ) ; } } else { for ( int num = 1 ; num <= m ; ++ num ) { list.add ( num ) ; dfs ( list ) ; list.remove ( list.size ( ) - 1 ) ; } } } }
