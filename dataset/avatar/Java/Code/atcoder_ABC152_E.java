import java.math.* ; import java.util.* ; import java.util.function.* ; public class atcoder_ABC152_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } sc.close ( ) ; BigInteger lcm = BigInteger.ONE ; for ( int ai : A ) { BigInteger a = BigInteger.valueOf ( ai ) ; lcm = lcm.divide ( lcm.gcd ( a ) ).multiply ( a ) ; } long mod = 1000000007 ; long modLcm = lcm.remainder ( BigInteger.valueOf ( mod ) ).longValue ( ) ; long ans = 0 ; for ( int ai : A ) ans = ( ans + modDiv ( modLcm , ai , mod ) ) % mod ; System.out.println ( ans ) ; } private static long modDiv ( long a , long b , long mod ) { return ( a % mod ) * modInv ( b , mod ) % mod ; } private static long modInv ( long x , long mod ) { return modPow ( x , mod - 2 , mod ) ; } private static long modPow ( long b , long e , long mod ) { long ans = 1 ; long x = b % mod ; for ( long y = e ; y != 0 ; y >>= 1 ) { if ( ( y & 1 ) == 1 ) ans = ( ans * x ) % mod ; x = ( x * x ) % mod ; } return ans ; } }
